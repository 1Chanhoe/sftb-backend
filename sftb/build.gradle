plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    
    //MyBatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    
    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    //Devtools for hot reloading during development
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    //MariaDB JDBC driver
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    
    //JSON Web Token (JWT) for authentication
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    // Jakarta Persistence API (replaces javax.persistence)
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    
    // Jakarta Servlet API (replaces javax.servlet)
    providedRuntime 'jakarta.servlet:jakarta.servlet-api:5.0.0'
    
    //얘넨 아직모름
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    
    //Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-parameters'] // 파라미터 이름 정보를 포함하도록 설정
}

tasks.named('test') {
    useJUnitPlatform()
}